---
name: master-build
on:
  push:
    branches:
      - master
jobs:
  go-lint:
    name: perform golang linting
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v1.2.1
        with:
          version: v1.26

  go-build:
    needs: go-lint
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: get gox
        run: go get github.com/mitchellh/gox

      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v2
        with:
          token: ${{secrets.github_token}}

      - run: echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')

      - name: Build
        run: |
          ls -lahrt ~/go/bin/
          mkdir -p $REPOSITORY_NAME-v1.0.${{ steps.buildnumber.outputs.build_number }}/
          cd $REPOSITORY_NAME-v1.0.${{ steps.buildnumber.outputs.build_number }}/
          ~/go/bin/gox -osarch="linux/amd64 darwin/amd64 windows/amd64" ../

      - name: Compress Binaries
        run: |
          pwd
          tar -zcvf \
          $REPOSITORY_NAME-v1.0.${{ steps.buildnumber.outputs.build_number }}-binaries.tar.gz \
          $REPOSITORY_NAME-v1.0.${{ steps.buildnumber.outputs.build_number }} README.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v1.0.${{ steps.buildnumber.outputs.build_number }}"
          release_name: "v1.0.${{ steps.buildnumber.outputs.build_number }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.REPOSITORY_NAME }}-v1.0.${{ steps.buildnumber.outputs.build_number }}-binaries.tar.gz
          asset_name: ${{ env.REPOSITORY_NAME }}-v1.0.${{ steps.buildnumber.outputs.build_number }}-binaries.tar.gz
          asset_content_type: application/gzip

      - name: Mark current build as the latest build
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Latest Build"

      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v0.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}